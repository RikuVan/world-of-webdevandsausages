---

- name: Add Nginx repository
  apt_repository:
    repo: ppa:nginx/stable

- name: Update the repository cache and update package "nginx" to latest version
  apt:
    name: nginx
    state: latest
    update_cache: yes

- name: Install and configure Ubuntu firewall
  block:
    - name: Install ubuntu firewall
      apt:
        name: ufw
        state: latest
    - include_tasks: firewall.yml
  tags:
    - firewall

- name: Install Python 3 Pip
  apt:
    name: python3-pip
    state: latest

- include_tasks: certbot.yml
  tags:
    - certbot

- name: Install Nginx site configuration
  template: src={{ item.template }} dest=/etc/nginx/{{ item.destination }} mode=0644 owner=root group=root
  notify: Reload Nginx
  with_items:
    - "template": backend_site.j2
      "destination": sites-enabled/backend_site

- name: Install Docker CE
  include_role:
    name: haxorof.docker-ce
  vars:
    docker_compose: true
  notify: Ensure docker daemon is running
  tags:
    - docker-ce

- include_tasks: hardening.yml
  tags:
    - hardening

- name: Make sure rsync is installed
  apt:
    name: rsync

- name: Synchronize backend project file to target machine
  become: yes
  synchronize:
    delete: yes
    src: /opt/wds-event-tool
    dest: /opt
    archive: yes
    recursive: yes
    rsync_opts:
      - "--exclude=.git"

- name: Run npm install & Build the client
  local_action: command bash -c "cd /opt/wds-client && npm install && npm build"
  tags:
    - client

- name: Synchronize client project file to target machine
  become: yes
  synchronize:
    delete: yes
    src: /opt/wds-client/build/
    dest: /opt/wds-client
    archive: yes
    recursive: yes
    rsync_opts:
      - "--exclude=.git"
  tags:
    - client

- name: Run docker compose up
  docker_service:
    project_src: /opt/wds-event-tool
    restarted: true
    state: present
