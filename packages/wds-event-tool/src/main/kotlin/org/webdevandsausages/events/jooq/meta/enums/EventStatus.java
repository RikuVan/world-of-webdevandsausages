/*
 * This file is generated by jOOQ.
*/
package meta.enums;


import meta.Public;
import org.jooq.Catalog;
import org.jooq.EnumType;
import org.jooq.Schema;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public enum EventStatus implements EnumType {

    PLANNING("PLANNING"),

    VISIBLE("VISIBLE"),

    OPEN("OPEN"),

    OPEN_WITH_WAITLIST("OPEN_WITH_WAITLIST"),

    OPEN_FULL("OPEN_FULL"),

    CLOSED_WITH_FEEDBACK("CLOSED_WITH_FEEDBACK"),

    CLOSED("CLOSED"),

    CANCELLED("CANCELLED");

    private final String literal;

    private EventStatus(String literal) {
        this.literal = literal;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return getSchema() == null ? null : getSchema().getCatalog();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getName() {
        return "event_status";
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String getLiteral() {
        return literal;
    }
}
